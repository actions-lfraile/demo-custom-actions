# Workflow to trigger repository creation

name: Create repo
on:
  issues:
    types: [opened]
  workflow_dispatch:

jobs:
  create-repository:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: Get Token
        id: github_app
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APP_ID }}
          application_private_key: ${{ secrets.APP_PRIVATE_KEY }}
   
      # - name: Parse the issue
      #   id: parser
      #   uses: lfraileorg/custom-js-action-issue-parser@main
      #   with:
      #     admin_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Greetings for the users submitting issues to this repository
        uses: actions/github-script@v4
        with:
          github-token: ${{ steps.github_app.outputs.token }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              ðŸ‘‹ Thanks for opening this issue to create the repository '${{ steps.parser.outputs.name }}'!

              Hang on for a moment while we do the checks and you will be notified in this issue when everything is ready.
              `
            })

      # - name: Create capability repository
      #   id: create_repository
      #   uses: lfraileorg/custom-js-action-repo-creator@main
      #   with:
      #     repository_name: ${{ steps.parser.outputs.name }}
      #     admin_token: ${{ steps.github_app.outputs.token }}

      - uses: actions/github-script@v4
        name: Report created elements
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              OK @${context.payload.sender.login}, we are finished!

              The new repository created is: **${{ steps.create_repository.outputs.repository_name }}**

              We are now closing this issue.
              `
            })
            github.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            })
